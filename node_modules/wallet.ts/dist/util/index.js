"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.prepend0x = exports.strip0x = exports.decompressPublicKey = void 0;
const elliptic_1 = require("elliptic");
const secp256k1 = new elliptic_1.ec("secp256k1");
function decompressPublicKey(publicKey) {
    const length = publicKey.length;
    const firstByte = publicKey[0];
    if ((length !== 33 && length !== 65) || firstByte < 2 || firstByte > 4) {
        throw new Error("invalid public key");
    }
    let key;
    try {
        key = secp256k1.keyFromPublic(publicKey);
    }
    catch (_err) {
        throw new Error("invalid public key");
    }
    return Buffer.from(key.getPublic().encode());
}
exports.decompressPublicKey = decompressPublicKey;
function strip0x(hex) {
    return hex.replace(/^0x/i, "");
}
exports.strip0x = strip0x;
function prepend0x(hex) {
    return hex.replace(/^(0x)?/i, "0x");
}
exports.prepend0x = prepend0x;
exports.default = { decompressPublicKey, strip0x };
//# sourceMappingURL=index.js.map